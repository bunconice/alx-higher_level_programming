import method to test
>>> add_integer = __import__('0-add_integer').add_integer

SUCCESS CASES:

>>> print(add_integer(2, 1))
3
>>> print(add_integer(-1, 8))
7
>>> print(add_integer(-8, -2))
-10
>>> print(add_integer(2.1, 1.1))
3
>>> print(add_integer(2))
100

FAILED CASES:

Test no args:
>>> print(add_integer(None))
Traceback (most recent call last):
...
TypeError: a must be an integer
>>> print(add_integer(None, None))
Traceback (most recent call last):
...
TypeError: a must be an integer

Test extra args:
>>> print(add_integer(1, 2, 3))
Traceback (most recent call last):
...
TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

Test other data types:
>>> print(add_integer("hey"))
Traceback (most recent call last):
...
TypeError: a must be an integer
>>> print(add_integer(0, [1, 2, 3]))
Traceback (most recent call last):
...
TypeError: b must be an integer

Test max/min numbers Python can handle ("inf" is infinity):
>>> print(add_integer(float("inf")))
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer
>>> print(add_integer(float("-inf")))
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer

Test special float NaN in Python (not a number):
>>> print(add_integer(float("NaN")))
Traceback (most recent call last):
...
ValueError: cannot convert float NaN to integer
